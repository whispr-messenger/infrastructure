---
apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: istio-ingress
  namespace: whispr-prod
  
  annotations:
    kubernetes.io/ingress.class: "nginx"
    
    # TLS Frontend (Internet --> NGINX) : Let's Encrypt
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # TLS Backend (NGINX --> Istio) : HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "false"
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    # Use $host to forward the original hostname as SNI to Istio Gateway
    # This allows Envoy to match the correct filter chain based on the public hostname
    nginx.ingress.kubernetes.io/proxy-ssl-name: "$host"

spec:
  ingressClassName: nginx
  
  tls:
  - hosts:
    - whispr.epitech-msc2026.me
    - www.whispr.epitech-msc2026.me
    #- api.whispr.app
    secretName: whispr-tls  # Let's Encrypt
  
  rules:
  # Site principal + API
  - host: whispr.epitech-msc2026.me
    http:
      # First to match in order win
      paths:
      # API
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: istio-gateway
            port:
              number: 443
      
      # Root
      - path: /
        pathType: Prefix
        backend:
          service:
            name: istio-gateway
            port:
              number: 443
  
  # WWW redirect
  - host: www.whispr.epitech-msc2026.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: istio-gateway
            port:
              number: 443
  
  # API
  # - host: api.whispr.app
  #   http:
  #     paths:
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: istio-gateway
  #           port:
  #             number: 443