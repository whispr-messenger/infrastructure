# SonarQube configuration for GKE with HTTPS and GitHub OAuth
#
# GitHub OAuth Setup:
# - Application name: SonarQube whispr-messenger
# - Homepage URL: https://sonarqube.whispr.epitech-msc2026.me
# - Authorization callback URL: https://sonarqube.whispr.epitech-msc2026.me/oauth2/callback/github
# - Client ID: Ov23liyFBsJZ4bBBdixd
# - Organization: whispr-messenger (all members can access)
#
replicaCount: 1

image:
  repository: sonarqube
  tag: "10.7.0-community"
  pullPolicy: IfNotPresent

# Service configuration
service:
  type: ClusterIP
  externalPort: 9000
  internalPort: 9000
  labels: {}
  annotations: {}

# Ingress configuration for HTTPS
ingress:
  enabled: true
  hosts:
    - name: sonarqube.whispr.epitech-msc2026.me
      path: /
      pathType: Prefix
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  ingressClassName: nginx
  tls:
    - secretName: sonarqube-tls
      hosts:
        - sonarqube.whispr.epitech-msc2026.me

# Resource limits and requests
resources:
  requests:
    memory: "1Gi"
    cpu: "500m"
  limits:
    memory: "2Gi"
    cpu: "1000m"

# Persistence for SonarQube data
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  storageClass: "standard-rwo"  # GKE standard storage class

# SonarQube specific configurations
sonarProperties:
  # Database configuration will be handled by the chart
  sonar.forceAuthentication: "true"
  sonar.web.javaOpts: "-Xmx1G -Xms1G -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
  sonar.ce.javaOpts: "-Xmx1G -Xms1G -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
  # GitHub OAuth configuration
  sonar.auth.github.enabled: "true"
  sonar.auth.github.clientId.secured: "Ov23liyFBsJZ4bBBdixd"
  sonar.auth.github.clientSecret.secured: "240bb9475735bbf6627752a5d19475e111961478"
  sonar.auth.github.organizations: "whispr-messenger"
  sonar.auth.github.allowUsersToSignUp: "true"

# PostgreSQL subchart configuration
postgresql:
  enabled: true
  auth:
    username: sonarUser
    # Password will be auto-generated and stored in a secret
    # postgresqlPassword: <auto-generated>
    database: sonarDB
    existingSecret: ""
    secretKeys:
      adminPasswordKey: postgresql-password
      userPasswordKey: postgresql-password
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "standard-rwo"
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

# Security context
securityContext:
  fsGroup: 1000

# Pod security context
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Environment variables
env:
  - name: SONAR_JDBC_USERNAME
    value: "sonarUser"
  - name: SONAR_JDBC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: sonarqube-postgresql
        key: postgresql-password
  - name: SONAR_JDBC_URL
    value: "jdbc:postgresql://sonarqube-postgresql:5432/sonarDB"

# Probes configuration
livenessProbe:
  httpGet:
    path: /api/system/status
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 6
  timeoutSeconds: 1

readinessProbe:
  httpGet:
    path: /api/system/status
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 6
  timeoutSeconds: 1

startupProbe:
  httpGet:
    path: /api/system/status
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 24
  timeoutSeconds: 1